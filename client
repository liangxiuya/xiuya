// Client side C/C++ program to demonstrate Socket programming
#include <stdio.h>
#include<netinet/in.h>
#include<netdb.h>
#include<arpa/inet.h>
#include <sys/socket.h>
#include <stdlib.h>
#include <string.h>
#define PORT 8080
  
int main(int argc, char const *argv[])
{
    struct sockaddr_in address;
    int sock = 0, valread;
    struct sockaddr_in serv_addr;
    char hello[20];
    char buffer[1024] = {0};
//调用socket函数，创建套接字 (使用TCP协议)
    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)
    {
        printf("\n Socket creation error \n");
        return -1;
    }
    //初始化结构体
    memset(&serv_addr, '0', sizeof(serv_addr));
    //协议族：TCP/IP
    serv_addr.sin_family = AF_INET;
    //端口号
    serv_addr.sin_port = htons(PORT);
    //指向服务端的ip地址
    serv_addr.sin_addr.s_addr=inet_addr("169.254.208.138");
    
//利用inet_pton函数将点分十进制转化为二进制整数
    if(inet_pton(AF_INET, "169.254.208.138", &serv_addr.sin_addr)<=0)
    {
        printf("\nInvalid address or Address not supported \n");
        return -1;
    }
//调用connect使用该套接字与服务器进行连接
     if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)
    {
        printf("\nConnection Failed \n");
        return -1;
    }
    scanf("%s",hello);
//向已经连接的socket发送数据
    send(sock , hello , strlen(hello) , 0 );
    printf("Message sent to server!\n");
//接收服务器发来的回复消息
    valread = read( sock , buffer, 1024);
    printf("%s\n",buffer );
    printf("Receive message from server!\n");
    return 0;
}
